{"version":3,"sources":["weekItem.tsx"],"names":["React","memo","useCallback","styles","itemWidht","colors","View","TouchableOpacity","Text","getDate","getDay","WeekItem","date","selectedDate","onSelectDate","selectedColor","day","selectDate","bgColor","defaultBg","width","alignItems","paddingVertical","eachDay","backgroundColor","borderColor","color","white","sunday","saturday","black"],"mappings":"AAAA,OAAOA,KAAP,IAAoBC,IAApB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,MAAT,EAAgCC,SAAhC,EAA2CC,MAA3C,QAAyD,QAAzD;AACA,SAASC,IAAT,EAAeC,gBAAf,EAAiCC,IAAjC,QAA6C,cAA7C;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,UAAhC;AAEA,OAAO,MAAMC,QAA2B,gBAAGV,IAAI,CAC7C,QAAyD;AAAA,MAAxD;AAAEW,IAAAA,IAAF;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA,YAAtB;AAAoCC,IAAAA;AAApC,GAAwD;AACvD,QAAMC,GAAG,GAAGP,OAAO,CAACG,IAAD,CAAnB;AACA,QAAMK,UAAU,GAAGf,WAAW,CAAC,MAAM;AACnCY,IAAAA,YAAY,CAACF,IAAD,CAAZ;AACD,GAF6B,EAE3B,CAACA,IAAD,EAAOE,YAAP,CAF2B,CAA9B;AAIA,QAAMI,OAAO,GAAGH,aAAH,aAAGA,aAAH,cAAGA,aAAH,GAAoBV,MAAM,CAACc,SAAxC;AAEA,sBACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAEhB,SAAT;AAAoBiB,MAAAA,UAAU,EAAE,QAAhC;AAA0CC,MAAAA,eAAe,EAAE;AAA3D;AADT,kBAGE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEL;AAA3B,kBACE,oBAAC,IAAD;AACE,IAAA,KAAK,EACHJ,YAAY,GACR,EACE,GAAGV,MAAM,CAACoB,OADZ;AAEEC,MAAAA,eAAe,EAAEN,OAFnB;AAGEO,MAAAA,WAAW,EAAEP,OAHf;AAIEQ,MAAAA,KAAK,EAAErB,MAAM,CAACsB;AAJhB,KADQ,GAOR,EACE,GAAGxB,MAAM,CAACoB,OADZ;AAEEG,MAAAA,KAAK,EACHhB,MAAM,CAACE,IAAD,CAAN,KAAiB,CAAjB,GACIP,MAAM,CAACuB,MADX,GAEIlB,MAAM,CAACE,IAAD,CAAN,KAAiB,CAAjB,GACAP,MAAM,CAACwB,QADP,GAEAxB,MAAM,CAACyB;AAPf;AATR,KAoBGd,GApBH,CADF,CAHF,CADF;AA8BD,CAvC4C,CAAxC","sourcesContent":["import React, { FC, memo, useCallback } from 'react';\nimport { styles, WeekItemProps, itemWidht, colors } from '../lib';\nimport { View, TouchableOpacity, Text } from 'react-native';\nimport { getDate, getDay } from 'date-fns';\n\nexport const WeekItem: FC<WeekItemProps> = memo(\n  ({ date, selectedDate, onSelectDate, selectedColor }) => {\n    const day = getDate(date);\n    const selectDate = useCallback(() => {\n      onSelectDate(date);\n    }, [date, onSelectDate]);\n\n    const bgColor = selectedColor ?? colors.defaultBg;\n\n    return (\n      <View\n        style={{ width: itemWidht, alignItems: 'center', paddingVertical: 5 }}\n      >\n        <TouchableOpacity onPress={selectDate}>\n          <Text\n            style={\n              selectedDate\n                ? {\n                    ...styles.eachDay,\n                    backgroundColor: bgColor,\n                    borderColor: bgColor,\n                    color: colors.white,\n                  }\n                : {\n                    ...styles.eachDay,\n                    color:\n                      getDay(date) === 0\n                        ? colors.sunday\n                        : getDay(date) === 6\n                        ? colors.saturday\n                        : colors.black,\n                  }\n            }\n          >\n            {day}\n          </Text>\n        </TouchableOpacity>\n      </View>\n    );\n  },\n);\n"]}