{"version":3,"sources":["functions.ts"],"names":["createLocalWeek","lang","ja","enUS","ko","es","createWholeWeek","date","weekOfTheDay","arr","i","diff","abs","Math","push","createWholeWeeks","wholeWeek","lastWeek","weekBeforeLastWeek","nextWeek","weekAfterNextWeek","createWeekList","locale","list","localize","day","width","formatDate","d","createNextTwoWeeks","length","slice","createPreviousTwoWeeks","unshift"],"mappings":"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","sourcesContent":["import { Language } from './types';\nimport { ja, enUS, ko, es } from 'date-fns/locale';\nimport {\n  Locale,\n  getDay,\n  addDays,\n  subDays,\n  format,\n  addWeeks,\n  subWeeks,\n} from 'date-fns';\n\nexport const createLocalWeek = (lang?: Language): Locale => {\n  switch (lang) {\n    case 'ja':\n      return ja;\n    case 'en':\n      return enUS;\n    case 'ko':\n      return ko;\n    case 'es':\n      return es;\n    default:\n      return enUS;\n  }\n};\n\nexport const createWholeWeek = (date: Date): Date[] => {\n  const weekOfTheDay = getDay(date);\n  const arr: Date[] = [];\n  for (let i = 0; i < 7; i++) {\n    const diff = i - weekOfTheDay;\n    const abs = Math.abs(diff);\n    if (diff === 0) arr.push(date);\n    else if (diff < 0) arr.push(subDays(date, abs));\n    else arr.push(addDays(date, abs));\n  }\n  return arr;\n};\n\nexport const createWholeWeeks = (date: Date, wholeWeek: Date[]) => {\n  const lastWeek = createWholeWeek(subWeeks(date, 1));\n  const weekBeforeLastWeek = createWholeWeek(subWeeks(date, 2));\n  const nextWeek = createWholeWeek(addWeeks(date, 1));\n  const weekAfterNextWeek = createWholeWeek(addWeeks(date, 2));\n  return [\n    ...weekBeforeLastWeek,\n    ...lastWeek,\n    ...wholeWeek,\n    ...nextWeek,\n    ...weekAfterNextWeek,\n  ];\n};\n\nexport const createWeekList = (locale: Locale) => {\n  const list: string[] = [];\n  for (let i = 0; i < 7; i++) {\n    list.push(locale.localize?.day(i, { width: 'short' }));\n  }\n  return list;\n};\n\nexport const formatDate = (d: Date) => {\n  return format(d, 'yyyy年MM月dd日');\n};\n\nexport const createNextTwoWeeks = (d: Date, arr: Date[]): Date[] => {\n  if (arr.length === 14) return arr;\n  for (let i = 0; i < 7; i++) {\n    arr.push(addDays(d, i + 1));\n  }\n  return createNextTwoWeeks(arr.slice(-1)[0], arr);\n};\n\nexport const createPreviousTwoWeeks = (d: Date, arr: Date[]): Date[] => {\n  if (arr.length === 14) return arr;\n  for (let i = 0; i < 7; i++) {\n    arr.unshift(subDays(d, i + 1));\n  }\n  return createPreviousTwoWeeks(arr[0], arr);\n};\n"]}